name: Git Push
description: |
  This action creates a new commit and pushes the changes back to the remote repository.
  It automatically commits files that were modified during the workflow run.

  ## Usage

  ```yaml
    steps:
      - name: Git Push
        uses: tmknom/git-push-action@v0
        with:
          message: add useful feature
  ```

inputs:
  message:
    required: true
    description: The commit message.
  branch:
    required: false
    description: Specify the name for the new branch.
  allow-empty:
    default: false
    required: false
    description: Set to true to allow creating empty commits.

outputs:
  pushed:
    value: ${{ steps.push.outcome == 'success' && 'true' || 'false' }}
    description: Whether the changes pushed to the repository.
  branch:
    value: ${{ steps.switch.outputs.branch }}
    description: Name of the pushed branch.
  subject:
    value: ${{ steps.push.outputs.subject }}
    description: The first line of the commit message.

runs:
  using: composite

  steps:
    - name: Traceable Identifier
      id: traceable
      uses: tmknom/traceable-identifier-action@6555160c543eb771a876fb4ceaecd43ec79df7b6 # v0.1.0

    - name: Git Config
      uses: tmknom/git-config-action@970621c4819d5a601bbac4a2bcf6f5f80d92a2e6 # v0.2.0

    - name: Git diff status
      id: status
      run: |
        echo "::group::Git diff status"
        set -x
        if [[ "$(git status --short --untracked-files)" != "" ]]; then
          echo "diff=true" >> "${GITHUB_OUTPUT}"
        else
          echo "diff=false" >> "${GITHUB_OUTPUT}"
        fi
        echo "::endgroup::"
      shell: bash

    - name: Switch branch
      id: switch
      env:
        SPECIFIED_BRANCH: ${{ inputs.branch }}
        IDENTIFIER: ${{ steps.traceable.outputs.identifier }}
      run: |
        echo "::group::Switch branch"
        set -x
        branch="${SPECIFIED_BRANCH}"
        if [[ "${branch}" == "" ]]; then
          branch="auto/${IDENTIFIER}"
        fi
        echo "branch=${branch}" >> "${GITHUB_OUTPUT}"

        git switch -c "${branch}"
        git add .
        echo "::endgroup::"
      shell: bash

    - name: Git push
      id: push
      if: ${{ steps.status.outputs.diff == 'true' || inputs.allow-empty == 'true' }}
      env:
        MESSAGE: ${{ inputs.message }}
        ALLOW_EMPTY: ${{ inputs.allow-empty }}
        BRANCH: ${{ steps.switch.outputs.branch }}
      run: |
        echo "::group::Git push"
        set -x
        log="Generated by ${GITHUB_WORKFLOW} workflow."
        url="- ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"

        declare -a flags=(-m "${MESSAGE}" -m "${log}" -m "${url}")
        if [[ "${ALLOW_EMPTY}" == "true" ]]; then
          flags+=(--allow-empty)
        fi
        git commit "${flags[@]}"

        git push origin "${BRANCH}"
        echo "subject=$(git log -1 --format='%s')" >> "${GITHUB_OUTPUT}"
        echo "::endgroup::"
      shell: bash
